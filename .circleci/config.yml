version: 2.1

defaults: &defaults
  docker:
    - image: circleci/python:3.9.5
  working_directory: ~/project

prepare_tox: &prepare_tox
  run:
    name: Installing tox
    command: |
      sudo pip install --upgrade pip
      pip install --user tox

filter_branch_master: &filter_branch_master
  filters:
    branches:
      only: 
        - master

jobs:
  test_app: 
    <<: *defaults
    working_directory: ~/project/ci-and-publishing/Titanic-fast-api
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      - run:
          name: Running app tests
          command:
            tox
  
  deploy_to_heroku:
    <<: *defaults
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Deploy to heroku
          command:
            git subtree push --prefix ci-and-publishing/Titanic-fast-api https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

  test_and_upload_classification_model:
    <<: *defaults
    working_directory: ~/project/ci-and-publishing/Titanic-classification-model
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      - run:
          name: Test the model
          command:
            tox
      - run:
          name: Publish model to Gemfury
          command:
            tox -e publish_model

  deploy_app_cointainer_in_heroku:
    <<: *defaults
    steps:
      - setup_remote_docker:
            # Supported versions: https://circleci.com/docs/2.0/building-docker-images/#docker-version
          version: 20.10.6
      - checkout:
          name: ~/project
      - run:
          name: Build Image
          command: |
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            cd deploying-with-container && make build-ml-api-heroku
      - run:
          name: Push Image to Heroku
          command:
            cd deploying-with-container && make push-ml-api-heroku
      - run:
          name: Release to Heroku
          command:
            cd deploying-with-container && make push-ml-api-heroku

workflows:
  my-worflow:
    jobs:
      - test_app  
      - deploy_to_heroku:
          requires:
            - test_app
          <<: *filter_branch_master
      - test_and_upload_classification_model:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - deploy_app_cointainer_in_heroku:
          <<: *filter_branch_master

